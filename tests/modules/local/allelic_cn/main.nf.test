nextflow_process {

    name "Test Process NON_INTEGER_BALANCE"
    script "modules/local/allelic_cn/main.nf"
    process "NON_INTEGER_BALANCE"

    test("Should run NON_INTEGER_BALANCE without failures") {

        when {
            params {
                // define parameters here. Example:
                outdir = "results"
            }
            process {
                """
                // define inputs of the process here. Example:
                // input[0] = file("test-file.txt")

                meta = [ id: "test" ]
                input[0] = tuple(meta, "$projectDir/tests/test_data/test_jabba_output.rds")
                input[1] = tuple(meta, "$projectDir/tests/test_data/dryclean_coverage.rds")
                input[2] = tuple(meta, "$projectDir/tests/test_data/hets_jabba.txt")
                // Defaults from nextflow.config
				input[3] = params.field_non_integer_balance
				input[4] = params.hets_thresh_non_integer_balance
				input[5] = params.genomes['GATK.GRCh37'].mask_non_integer_balance
				input[6] = params.overwrite_non_integer_balance
				input[7] = params.lambda_non_integer_balance
				input[8] = params.allin_non_integer_balance
				input[9] = params.fix_thresh_non_integer_balance
				input[10] = params.nodebounds_non_integer_balance
				input[11] = params.ism_non_integer_balance
				input[12] = params.genomes['GATK.GRCh37'].build_non_integer_balance
				input[13] = params.epgap_non_integer_balance
				input[14] = params.tilim_non_integer_balance
				input[15] = params.gurobi_non_integer_balance
				input[16] = params.fasta_non_integer_balance     // path to decoy fasta
				input[17] = params.genomes['GATK.GRCh37'].fasta
                """
            }
        }

        then {
            assert process.success
            //assert snapshot(process.out).match()
        }

    }

    name "Test Process NON_INTEGER_BALANCE
    script "modules/local/allelic_cn/main.nf"
    process "NON_INTEGER_BALANCE"

    test("Should run NON_INTEGER_BALANCE without failures") {

        when {
            params {
                // define parameters here. Example:
                outdir = "results"
            }
            process {
                """
                // define inputs of the process here. Example:
                // input[0] = file("test-file.txt")

                meta = [ id: "test" ]
                input[0] = tuple(meta, "$projectDir/tests/test_data/test_jabba_output.rds")
                input[1] = tuple(meta, "$projectDir/tests/test_data/dryclean_coverage.rds")
                input[2] = tuple(meta, "$projectDir/tests/test_data/hets_jabba.txt")
                // Defaults from nextflow.config
				input[3] = params.field_non_integer_balance
				input[4] = params.hets_thresh_non_integer_balance
				input[5] = params.genomes['GATK.GRCh37'].mask_non_integer_balance
				input[6] = params.overwrite_non_integer_balance
				input[7] = params.lambda_non_integer_balance
				input[8] = params.allin_non_integer_balance
				input[9] = params.fix_thresh_non_integer_balance
				input[10] = params.nodebounds_non_integer_balance
				input[11] = params.ism_non_integer_balance
				input[12] = params.genomes['GATK.GRCh37'].build_non_integer_balance
				input[13] = params.epgap_non_integer_balance
				input[14] = params.tilim_non_integer_balance
				input[15] = params.gurobi_non_integer_balance
				input[16] = params.fasta_non_integer_balance     // path to decoy fasta
				input[17] = params.genomes['GATK.GRCh37'].fasta
                """
            }
        }

        then {
            assert process.success
            //assert snapshot(process.out).match()
        }

    }

}

