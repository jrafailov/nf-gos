{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/mskilab-org/nf-jabba/master/assets/schema_input.json",
    "title": "mskilab-org/nf-jabba pipeline - params.input schema",
    "description": "Schema for the file provided with params.input",
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "patient": {
                "type": "string",
                "pattern": "^\\S+$",
                "errorMessage": "Patient ID must be provided and cannot contain spaces",
                "meta": ["patient"]
            },
            "sample": {
                "type": "string",
                "pattern": "^\\S+$",
                "errorMessage": "Sample ID must be provided and cannot contain spaces",
                "meta": ["sample"]
            },
            "sex": {
                "errorMessage": "Sex cannot contain spaces",
                "meta": ["sex"],
                "default": "NA",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ]
            },
            "status": {
                "type": "integer",
                "errorMessage": "Status can only be 0 (normal) or 1 (tumor). Defaults to 0, if none is supplied.",
                "meta": ["status"],
                "default": "0",
                "minimum": 0,
                "maximum": 1
            },
            "lane": {
                "type": "string",
                "pattern": "^\\S+$",
                "unique": ["patient", "sample"],
                "anyOf": [
                    {
                        "dependentRequired": ["fastq_1"]
                    },
                    {
                        "dependentRequired": ["bam"]
                    }
                ],
                "meta": ["lane"]
            },
            "fastq_1": {
                "errorMessage": "FastQ file for reads 1 cannot contain spaces and must have extension '.fq.gz' or '.fastq.gz'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.f(ast)?q\\.gz$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "fastq_2": {
                "errorMessage": "FastQ file for reads 2 cannot contain spaces and must have extension '.fq.gz' or '.fastq.gz'",
                "dependentRequired": ["fastq_1"],
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.f(ast)?q\\.gz$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "table": {
                "errorMessage": "Recalibration table cannot contain spaces and must have extension '.table'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.table$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "cram": {
                "errorMessage": "CRAM file cannot contain spaces and must have extension '.cram'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.cram$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "crai": {
                "errorMessage": "CRAM index file cannot contain spaces and must have extension '.crai'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.crai$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "bam": {
                "errorMessage": "BAM file cannot contain spaces and must have extension '.bam'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.bam$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "bai": {
                "errorMessage": "BAM index file cannot contain spaces and must have extension '.bai'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.bai$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "hets": {
                "errorMessage": "Pileups file and must have extension '.txt'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.txt$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "frag_cov": {
                "errorMessage": "COV file cannot contain spaces and must have extension '.rds' or '.txt'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.(rds|txt)$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "dryclean_cov": {
                "errorMessage": "COV file cannot contain spaces and must have extension '.rds' or '.txt'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.(rds|txt)$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "ploidy": {
                "errorMessage": "ploidy must be a number",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "number"
                    }
                ],
            },
            "seg": {
                "errorMessage": "SEG file cannot contain spaces and must have extension '.rds'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.rds$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "nseg": {
                "errorMessage": "NSEG file cannot contain spaces and must have extension '.rds'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.rds$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "vcf": {
                "errorMessage": "VCF file for reads 1 cannot contain spaces and must have extension '.vcf' or '.vcf.gz'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.vcf(\\.gz)?$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "vcf2": {
                "errorMessage": "VCF file for reads 2 cannot contain spaces and must have extension '.vcf' or '.vcf.gz'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.vcf(\\.gz)?$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "jabba_rds": {
                "errorMessage": "jabba.rds file and must have extension '.rds'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.rds$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "ni_balanced_rds": {
                "errorMessage": "balanced_gg.rds file and must have extension '.rds'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.rds$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "lp_balanced_rds": {
                "errorMessage": "balanced_gg.rds file and must have extension '.rds'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.rds$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "events": {
                "errorMessage": "complex.rds file and must have extension '.rds'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.rds$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "fusions": {
                "errorMessage": "fusions.rds file and must have extension '.rds'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.rds$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "snv_somatic_vcf": {
                "errorMessage": "Sage somatic VCF output file cannot contain spaces and must have extension '.vcf' or '.vcf.gz'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.vcf(\\.gz)?$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "snv_somatic_tbi": {
                "errorMessage": "Sage somatic VCF tbi file cannot contain spaces and must have extension '.tbi' or '.gz.tbi'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.tbi(\\.gz.tbi)?$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "snv_germline_vcf": {
                "errorMessage": "Sage germline VCF output file cannot contain spaces and must have extension '.vcf' or '.vcf.gz'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.vcf(\\.gz)?$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "snv_germline_tbi": {
                "errorMessage": "Sage germline VCF tbi file cannot contain spaces and must have extension '.tbi' or '.gz.tbi'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.tbi(\\.gz.tbi)?$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "variant_somatic_ann": {
                "errorMessage": "Annotated somatic VCF file cannot contain spaces and must have extension '.vcf' ",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.vcf$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "variant_somatic_bcf": {
                "errorMessage": "Annotated somatic BCF file cannot contain spaces and must have extension '.bcf' ",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.bcf$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "variant_germline_ann": {
                "errorMessage": "Annotated germline VCF file cannot contain spaces and must have extension '.vcf' ",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.vcf$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "variant_germline_bcf": {
                "errorMessage": "Annotated germline BCF file cannot contain spaces and must have extension '.bcf' ",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.bcf$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "snv_multiplicity": {
                "errorMessage": "SNV Multiplicity file cannot contain spaces and must have extension '.rds'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.rds$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "sbs_signatures": {
                "errorMessage": "SBS Signatures file cannot have spaces and must have extension '.txt'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.txt$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "indel_signatures": {
                "errorMessage": "SBS Signatures file cannot have spaces and must have extension '.txt'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.txt$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "signatures_matrix": {
                "errorMessage": "SBS Signatures file cannot have spaces and must have extension '.txt'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.txt$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
            "hrdetect": {
                "errorMessage": "HRDetect file cannot contain spaces and must have extension '.rds'",
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^\\S+\\.rds$"
                    },
                    {
                        "type": "string",
                        "pattern": "^NA$"
                    },
                    {
                        "type": "string",
                        "pattern": "^/dev/null$"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "format": "file-path",
                "exists": true
            },
        },
        "required": ["patient", "sample"]
    }
}
