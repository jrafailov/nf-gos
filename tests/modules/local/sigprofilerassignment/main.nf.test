nextflow_process {

    name "Test Process SIGPROFILERASSIGNMENT"
    script "modules/local/sigprofilerassignment/main.nf"
    process "SIGPROFILERASSIGNMENT"


    test("Should run somatic SIGPROFILERASSIGNMENT without failures") {

        when {
            params {
                // define parameters here. Example:
                outdir = "results"

            }
            process {
                """
                // define inputs of the process here. Example:
                // input[0] = file("test-file.txt")
                meta = [ id: "test" ]
                input[0] = tuple(meta, "$projectDir/tests/test_data/test_sigprofilerassignment_input.vcf", "$projectDir/tests/test_data/test_sigprofilerassignment_input.tbi")

                // Defaults from nextflow.config
                input[1] =  params.genomes['GATK.GRCh37'].fasta
                input[2] =  params.genomes['GATK.GRCh37'].fasta_fai
                input[3] = params.genomes['GATK.GRCh37'].ref_genome_version,
                input[4] = params.genomes['GATK.GRCh37'].sage_pon,
                input[5] = params.genomes['GATK.GRCh37'].sage_blocklist_regions,
                input[6] = params.genomes['GATK.GRCh37'].sage_blocklist_sites,
                input[7] = params.genomes['GATK.GRCh37'].clinvar_annotations,
                input[8] = params.genomes['GATK.GRCh37'].segment_mappability,
                input[9] = params.genomes['GATK.GRCh37'].driver_gene_panel,
                input[10] = params.genomes['GATK.GRCh37'].ensembl_data_resources,
                input[11] = params.genomes['GATK.GRCh37'].gnomad_resource
                """
            }
        }

        then {
            assert process.success
            //assert snapshot(process.out).match()
        }

    }
}
