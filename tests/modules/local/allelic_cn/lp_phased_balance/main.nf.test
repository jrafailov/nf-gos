nextflow_process {

    name "Test Process LP_PHASED_BALANCE
    script "modules/local/allelic_cn/main.nf"
    process "LP_PHASED_BALANCE"

    test("Should run LP_PHASED_BALANCE without failures") {

        when {
            params {
                // define parameters here. Example:
                outdir = "results"
            }
            process {
                """
                // define inputs of the process here. Example:
                // input[0] = file("test-file.txt")

                meta = [ id: "test" ]
                input[0] = tuple(meta, "$projectDir/tests/test_data/non_integer_balance_balanced_hets_gg.rds")
                input[1] = tuple(meta, "$projectDir/tests/test_data/sites.txt")
                // Defaults from nextflow.config
                input[2] = meta.id
				intput[3] = params.lambda_lp_phased_balance
				intput[4] = params.cnloh_lp_phased_balance
				intput[5] = params.major_lp_phased_balance
				intput[6] = params.allin_lp_phased_balance
				intput[7] = params.marginal_lp_phased_balance
				intput[8] = params.from_maf_lp_phased_balance
				intput[9] = params.genomes['GATK.GRCh37'].mask_lp_phased_balance
				intput[10] = params.ism_lp_phased_balance
				intput[11] = params.epgap_lp_phased_balance
				intput[12] = params.hets_thresh_lp_phased_balance
				intput[13] = params.min_bins_lp_phased_balance
				intput[14] = params.min_width_lp_phased_balance
				intput[15] = params.trelim_lp_phased_balance
				intput[16] = params.reward_lp_phased_balance
				intput[17] = params.nodefileind_lp_phased_balance
				intput[18] = params.tilim_lp_phased_balance
                """
            }
        }

        then {
            assert process.success
            //assert snapshot(process.out).match()
        }

    }

}

