/*
========================================================================================
    Nextflow config file for running tests
========================================================================================
*/

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    mskilab-org/nf-jabba Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {


	// TODO nf-core: Specify your pipeline's command line flags
	// Input options (Mandatory!)
	input                      = null
	postprocess_bams           = false
    tumor_only                 = false

	// References
	genome                     = 'GATK.GRCh37'
	igenomes_base              = 's3://ngi-igenomes/igenomes'
	igenomes_ignore            = false
	mski_base                  = 's3://mskilab-pipeline'
	save_reference             = false
	build_only_index           = false                            // Only build the reference indexes
	download_cache             = false                            // Do not download annotation cache

	// Options to consider
	// Main options
	no_intervals               = false                            // Intervals will be built from the fasta file
	nucleotides_per_second     = 200000                           // Default interval size
	tools                      = null                             // No default Variant_Calling or Annotation tools
	skip_tools                 = null                             // All tools (markduplicates + baserecalibrator + QC) are used by default
	split_fastq                = 50000000                         // FASTQ files will not be split by default by FASTP, sarek = 50000000

	// Modify FASTQ files (trim/split) with FASTP
	trim_fastq                 = false                            // No trimming by default
	clip_r1                    = 0
	clip_r2                    = 0
	three_prime_clip_r1        = 0
	three_prime_clip_r2        = 0
	trim_nextseq               = 0
	save_trimmed               = false
	save_split_fastqs          = false

	// Alignment
	aligner                    = 'bwa-mem'                       // Default is bwa-mem, bwa-mem2 and dragmap can be used too
	save_mapped                = true                            // Mapped BAMs are saved
	save_output_as_bam         = true                            // Output files from alignment are saved as bam by default and not as cram files
	seq_center                 = null                            // No sequencing center to be written in read group CN field by aligner
	seq_platform               = null                            // Default platform written in read group PL field by aligner, null by default.

	// Structural Variant Calling
	error_rate                 = 0.01                            // Default error_rate for Svaba

	//indel_mask                 = null                            // Must provide blacklist bed file for indels based on genome to run Svaba

	// SV filtering (tumor only)
	pad_junc_filter            = 1000                            // Default Padding for SV Junction filtering

    // HetPileups options
    filter_hets      = "TRUE"
    max_depth   = 1000

    // SigprofilerAssignment options
    sigprofilerassignment_cosmic_version = 3.4

	// fragCounter options
	midpoint_frag              = "TRUE"                           // If TRUE only count midpoint if FALSE then count bin footprint of every fragment interval: Default=TRUE
	windowsize_frag            = 1000                            // Window / bin size : Default=200 (but dryclean uses 1000 binsize)
	minmapq_frag               = 60                              // Minimal map quality : Default = 1
	paired_frag                = "TRUE"                           // Is the dataset paired : Default = TRUE
	exome_frag                 = "FALSE"	                        // Use exons as bins instead of fixed window : Default = FALSE

    // Dryclean options
    center_dryclean                    = "TRUE"
    cbs_dryclean                         = "FALSE"
    cnsignif_dryclean                    = 0.00001
    wholeGenome_dryclean                 = "TRUE"
    blacklist_dryclean                   = "FALSE"
    blacklist_path_dryclean              = "NA"
    germline_filter_dryclean             = "FALSE"
    germline_file_dryclean               = "NA"
    human_dryclean                       = "TRUE"
    field_dryclean                       = "reads"

	// ASCAT options
	field_ascat                         = "foreground"
	hets_thresh_ascat                   = 0.2
	penalty_ascat                       = 70
	gc_correct_ascat                    = "TRUE"
	rebin_width_ascat                   = 50000
	from_maf_ascat                      = "FALSE"

    // CBS options
    cnsignif_cbs                        = 0.01
    field_cbs                           = "foreground"
    name_cbs                            = "tumor"

	// JaBbA options
    blacklist_junctions_jabba = "NULL"
    geno_jabba = "FALSE"
    indel_jabba = "exclude"
    tfield_jabba = "tier"
    iter_jabba = 2
    rescue_window_jabba = 10000
    rescue_all_jabba = "TRUE"
    nudgebalanced_jabba = "TRUE"
    edgenudge_jabba = 0.1
    strict_jabba = "FALSE"
    allin_jabba = "FALSE"
    field_jabba = "foreground"
    maxna_jabba = 0.9
    ploidy_jabba = "NA"
    purity_jabba = "NA"
    pp_method_jabba = "ppgrid"
    cnsignif_jabba = 0.00001
    slack_jabba = 20
    linear_jabba = "FALSE"
    tilim_jabba = 7200
    epgap_jabba = 0.000001
    fix_thres_jabba = -1
    lp_jabba = "TRUE"
    ism_jabba = "TRUE"
    filter_loose_jabba = "FALSE"
    gurobi_jabba = "FALSE"
    verbose_jabba = "TRUE"

    // Allelic CN (Non-Integer Balance)
	field_non_integer_balance = "foreground"
	hets_thresh_non_integer_balance = 0.2
	overwrite_non_integer_balance = "TRUE"
	lambda_non_integer_balance = 20
	allin_non_integer_balance = "TRUE"
	fix_thresh_non_integer_balance = 10
	nodebounds_non_integer_balance = "TRUE"
	ism_non_integer_balance = "FALSE"
	epgap_non_integer_balance = 0.000001
	tilim_non_integer_balance = 6000
	gurobi_non_integer_balance = "FALSE"
	pad_non_integer_balance = 101

    // Allelic CN (LP-Phased Balance)
	lambda_lp_phased_balance = 100
	cnloh_lp_phased_balance = "TRUE"
	major_lp_phased_balance = "TRUE"
	allin_lp_phased_balance = "TRUE"
	marginal_lp_phased_balance = "TRUE"
	from_maf_lp_phased_balance = "FALSE"
	ism_lp_phased_balance = "FALSE"
	epgap_lp_phased_balance = 0.001
	hets_thresh_lp_phased_balance = 0.2
	min_bins_lp_phased_balance = 3
	min_width_lp_phased_balance = 0
	trelim_lp_phased_balance = 32000
	reward_lp_phased_balance = 10
	nodefileind_lp_phased_balance = 3
	tilim_lp_phased_balance = 6000

    // HRDetect
    hrdetect_mask = null

    // Variant Calling
    only_paired_variant_calling   = false // if true, skips germline variant calling for normal-paired samples
	ascat_ploidy                  = null  // default value for ASCAT
    ascat_min_base_qual           = 20    // default value for ASCAT
    ascat_min_counts              = 10    // default value for ASCAT
    ascat_min_map_qual            = 35    // default value for ASCAT
    ascat_purity                  = null  // default value for ASCAT
    cf_ploidy                     = "2"   // default value for Control-FREEC
    cf_coeff                      = 0.05  // default value for Control-FREEC
    cf_contamination              = 0     // default value for Control-FREEC
    cf_contamination_adjustment   = false // by default we are not using this in Control-FREEC
    cf_mincov                     = 0     // ControlFreec default values
    cf_minqual                    = 0     // ControlFreec default values
    cf_window                     = null  // by default we are not using this in Control-FREEC
    cnvkit_reference              = null  // by default the reference is build from the fasta file
    concatenate_vcfs              = false // by default we don't concatenate the germline-vcf-files
    ignore_soft_clipped_bases     = false // no --dont-use-soft-clipped-bases for GATK Mutect2
    wes                           = false // Set to true, if data is exome/targeted sequencing data. Used to use correct models in various variant callers
    joint_germline                = false // g.vcf & joint germline calling are not run by default if HaplotypeCaller is selected
    joint_mutect2                = false // if true, enables patient-wise multi-sample somatic variant calling
    sentieon_haplotyper_emit_mode = "variant" // default value for Sentieon haplotyper

    // Annotation
    dbnsfp                    = null // No dbnsfp processed file
    dbnsfp_consequence        = null // No default consequence for dbnsfp plugin
    dbnsfp_fields             = "rs_dbSNP,HGVSc_VEP,HGVSp_VEP,1000Gp3_EAS_AF,1000Gp3_AMR_AF,LRT_score,GERP++_RS,gnomAD_exomes_AF" // Default fields for dbnsfp plugin
    dbnsfp_tbi                = null // No dbnsfp processed file index
    outdir_cache              = null // No default outdir cache
    snpeff_cache              = 's3://annotation-cache/snpeff_cache/'
    spliceai_indel            = null // No spliceai_indel file
    spliceai_indel_tbi        = null // No spliceai_indel file index
    spliceai_snv              = null // No spliceai_snv file
    spliceai_snv_tbi          = null // No spliceai_snv file index
    use_annotation_cache_keys = false
    vep_cache                 = null //'s3://annotation-cache/vep_cache/' but not using it
    vep_custom_args           = "--everything --filter_common --per_gene --total_length --offline --format vcf" // Default arguments for VEP
    vep_dbnsfp                = null // dbnsfp plugin disabled within VEP
    vep_include_fasta         = false // Don't use fasta file for annotation with VEP
    vep_loftee                = null // loftee plugin disabled within VEP
    vep_out_format            = "vcf"
    vep_spliceai              = null // spliceai plugin disabled within VEP
    vep_spliceregion          = null // spliceregion plugin disabled within VEP


	// MultiQC options
	multiqc_config             = null
	multiqc_title              = null
	multiqc_logo               = null
	max_multiqc_email_size     = '25.MB'
	multiqc_methods_description = null


	// Boilerplate options
	outdir                     = null
	publish_dir_mode           = 'copy'
	email                      = null
	email_on_fail              = null
	plaintext_email            = false
	monochrome_logs            = false
	hook_url                   = null
	help                       = false
	version                    = false

	// Config options
	config_profile_name        = null
	config_profile_description = null
	custom_config_version      = 'master'
	custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
	config_profile_contact     = null
	config_profile_url         = null

	// Max resource options
	// Defaults only, expecting to be overwritten
	max_memory                 = '256.GB'
	max_cpus                   = 16
	max_time                   = '360.h'

	// Schema validation default options
	validationFailUnrecognisedParams = false
	validationLenientMode            = false
	validationSchemaIgnoreParams     = 'genomes, cf_ploidy'
	validationShowHiddenParams       = false
	validate_params                  = false

    genomes {
	'GATK.GRCh37' {
	    fasta                            = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Sequence/WholeGenomeFasta/human_g1k_v37_decoy.fasta"
	    fasta_fai                        = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Sequence/WholeGenomeFasta/human_g1k_v37_decoy.fasta.fai"
	    chr_dir                          = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Sequence/Chromosomes"
	    dict                             = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Sequence/WholeGenomeFasta/human_g1k_v37_decoy.dict"
	    bwa                              = "${params.mski_base}/test_data/BWAIndex/"
	    dbsnp                            = "${params.mski_base}/test_data/dbsnp_138.b37.small.vcf.gz"
	    dbsnp_tbi                        = "${params.mski_base}/test_data/dbsnp_138.b37.small.vcf.gz.tbi"
        dbsnp_vqsr                       = '--resource:dbsnp,known=false,training=true,truth=false,prior=2.0 dbsnp_138.b37.vcf.gz'
	    known_snps                       = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Annotation/GATKBundle/1000G_phase1.snps.high_confidence.b37.vcf.gz"
	    known_snps_tbi                   = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Annotation/GATKBundle/1000G_phase1.snps.high_confidence.b37.vcf.gz.tbi"
	    known_indels                     = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Annotation/GATKBundle/{1000G_phase1,Mills_and_1000G_gold_standard}.indels.b37.vcf.gz"
	    known_indels_tbi                 = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Annotation/GATKBundle/{1000G_phase1,Mills_and_1000G_gold_standard}.indels.b37.vcf.gz.tbi"
        germline_resource                = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Annotation/GATKBundle/af-only-gnomad.raw.sites.vcf.gz"
        germline_resource_tbi            = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Annotation/GATKBundle/af-only-gnomad.raw.sites.vcf.gz.tbi"
        intervals                        = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Annotation/intervals/wgs_calling_regions_Sarek.list"
        mappability                      = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Annotation/Control-FREEC/out100m2_hg19.gem"
        ascat_alleles                    = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Annotation/ASCAT/G1000_alleles_hg19.zip"
        ascat_genome                     = 'hg19'
        ascat_loci                       = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Annotation/ASCAT/G1000_loci_hg19.zip"
        ascat_loci_gc                    = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Annotation/ASCAT/GC_G1000_hg19.zip"
        ascat_loci_rt                    = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh37/Annotation/ASCAT/RT_G1000_hg19.zip"
	    snpeff_db                        = '87'
        snpeff_genome                    = 'GRCh37'
        vep_cache_version                = '111'
        vep_genome                       = 'GRCh37'
        vep_species                      = 'homo_sapiens'
        indel_mask                       = "${params.mski_base}/SVABA/hg19/snowman_blacklist.bed"
        germ_sv_db                       = "${params.mski_base}/SVABA/hg19/snowman_germline_mini_160413.bed"
        simple_seq_db                    = "${params.mski_base}/SVABA/hg19/repeat_masker_hg19_Simple.bed"
        blacklist_gridss                 = "${params.mski_base}/GRIDSS/blacklist/hg19/human_g1k_v37_decoy.fasta.bed"
        pon_gridss                       = "${params.mski_base}/GRIDSS/pon/hg19/"
        gnomAD_sv_db                     = "${params.mski_base}/junction_filter/gnomAD/hg19/GRCh19.gnomad_v2.1_sv.merged.rds"
        junction_pon_gridss              = "${params.mski_base}/junction_filter/GRIDSS/hg19/ggnome_gridss_pon_hg19_new.rds"
        junction_pon_svaba               = "${params.mski_base}/junction_filter/SvABA/hg19/ggnome_svaba_pon_hg19.rds"
        gcmapdir_frag                    = "${params.mski_base}/fragcounter/gcmapdir/hg19/"
        build_dryclean                   = 'hg19'
        hapmap_sites                     = "${params.mski_base}/test_data/hapmap_3.3.b37.vcf.gz"
        ref_genome_version               = "37"
        ensembl_data_dir                 = "${params.mski_base}/SAGE/hg19/ensembl_data/"
        somatic_hotspots                 = "${params.mski_base}/SAGE/hg19/KnownHotspots.somatic.37.vcf.gz"
        panel_bed                        = "${params.mski_base}/SAGE/hg19/ActionableCodingPanel.37.bed.gz"
        high_confidence_bed              = "${params.mski_base}/SAGE/hg19/NA12878_GIAB_highconf_IllFB-IllGATKHC-CG-Ion-Solid_ALLCHROM_v3.2.2_highconf.bed.gz"
        sage_pon 			             = "${params.mski_base}/PAVE/hg19/SageGermlinePon.1000x.37.tsv.gz"
        sage_blocklist_regions 			 = "${params.mski_base}/PAVE/hg19/KnownBlacklist.germline.37.bed"
        sage_blocklist_sites 			 = "${params.mski_base}/PAVE/hg19/KnownBlacklist.germline.37.vcf.gz"
        clinvar_annotations 			 = "${params.mski_base}/PAVE/hg19/clinvar.37.vcf.gz"
        segment_mappability 			 = "${params.mski_base}/PAVE/hg19/mappability_150.37.bed.gz"
        driver_gene_panel 			     = "${params.mski_base}/PAVE/hg19/DriverGenePanel.37.tsv"
        ensembl_data_resources           = "${params.mski_base}/SAGE/hg19/ensembl_data/"
        gnomad_resource 			     = "${params.mski_base}/PAVE/hg19/gnomad_variants_v37.csv.gz"
        pon_dryclean                     = "${params.mski_base}/test_data/chr21_pon.rds"
        blacklist_coverage_jabba         = "${params.mski_base}/JaBbA/blacklist_coverage/hg19/maskA_re.rds"
        gencode_fusions                  = "${params.mski_base}/fusions/hg19/gencode.v29lift37.annotation.nochr.rds"
        build_non_integer_balance        = "hg19"
        mask_non_integer_balance         = "${params.mski_base}/allelic_cn/non_integer_balance/hg19/mask_with_segdups.rds"
        mask_lp_phased_balance           = "${params.mski_base}/allelic_cn/lp_phased_balance/lp_phased_balance_maskA_re.rds"
        ref_hrdetect                     = "hg19"
	}
	'GATK.GRCh38' {
        fasta                        = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Sequence/WholeGenomeFasta/Homo_sapiens_assembly38.fasta"
        fasta_fai                    = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Sequence/WholeGenomeFasta/Homo_sapiens_assembly38.fasta.fai"
        chr_dir                      = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Sequence/Chromosomes"
        dict                         = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Sequence/WholeGenomeFasta/Homo_sapiens_assembly38.dict"
        bwa                          = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Sequence/BWAIndex/"
        bwamem2                      = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Sequence/BWAmem2Index/"
        cf_chrom_len                 = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Sequence/Length/Homo_sapiens_assembly38.len"
        dbsnp                        = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/GATKBundle/dbsnp_146.hg38.vcf.gz"
        dbsnp_tbi                    = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/GATKBundle/dbsnp_146.hg38.vcf.gz.tbi"
        known_snps                   = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/GATKBundle/1000G_omni2.5.hg38.vcf.gz"
        known_snps_tbi               = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/GATKBundle/1000G_omni2.5.hg38.vcf.gz.tbi"
        known_indels                 = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/GATKBundle/{Mills_and_1000G_gold_standard.indels.hg38,beta/Homo_sapiens_assembly38.known_indels}.vcf.gz"
        known_indels_tbi             = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/GATKBundle/{Mills_and_1000G_gold_standard.indels.hg38,beta/Homo_sapiens_assembly38.known_indels}.vcf.gz.tbi"
        germline_resource            = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/GATKBundle/af-only-gnomad.hg38.vcf.gz"
        germline_resource_tbi        = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/GATKBundle/af-only-gnomad.hg38.vcf.gz.tbi"
        intervals                    = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/intervals/wgs_calling_regions_noseconds.hg38.bed"
        mappability                  = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/Control-FREEC/out100m2_hg38.gem"
        pon                          = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/GATKBundle/1000g_pon.hg38.vcf.gz"
        pon_tbi                      = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/GATKBundle/1000g_pon.hg38.vcf.gz.tbi"
        ascat_alleles                = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/ASCAT/G1000_alleles_hg38.zip"
        ascat_genome                 = 'hg38'
        ascat_loci                   = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/ASCAT/G1000_loci_hg38.zip"
        ascat_loci_gc                = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/ASCAT/GC_G1000_hg38.zip"
        ascat_loci_rt                = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/ASCAT/RT_G1000_hg38.zip"
        snpeff_db                    = 105
        snpeff_genome                = 'GRCh38'
        vep_cache_version            = 110
        vep_genome                   = 'GRCh38'
        vep_species                  = 'homo_sapiens'
        indel_mask                   = "${params.mski_base}/SVABA/hg38/snowman_blacklist.hg38.bed"
        germ_sv_db                   = "${params.mski_base}/SVABA/hg38/snowman_germline_mini_hg38.bed"
        simple_seq_db                = "${params.mski_base}/SVABA/hg38/repeat_masker_hg38_simple.bed"
        blacklist_gridss             = "${params.mski_base}/GRIDSS/blacklist/hg38/ENCFF356LFX_hg38.bed"
        pon_gridss                   = "${params.mski_base}/GRIDSS/pon/hg38/"
        gnomAD_sv_db                 = "${params.mski_base}/junction_filter/gnomAD/hg38/gnomad.v4.0.sv.rds"
        junction_pon_gridss          = "${params.mski_base}/junction_filter/GRIDSS/hg38/atac_gridss_pon_unfiltered_updated_hg38.rds"
        junction_pon_svaba           = "${params.mski_base}/junction_filter/SvABA/hg38/atac_svaba_pon_unfiltered_updated.rds"
        gcmapdir_frag                = "${params.mski_base}/fragcounter/gcmapdir/hg38/"
        build_dryclean               = 'hg38'
        hapmap_sites                 = "${params.igenomes_base}/Homo_sapiens/GATK/GRCh38/Annotation/GATKBundle/hapmap_3.3.hg38.vcf.gz"
        pon_dryclean                 = "${params.mski_base}/dryclean/pon/hg38/detergent.rds"
        blacklist_coverage_jabba     = "${params.mski_base}/JaBbA/blacklist_coverage/hg38/hg38.coverage.mask.rds"
        build_non_integer_balance    = "hg38"
        mask_non_integer_balance     = "${params.mski_base}/allelic_cn/non_integer_balance/hg38/mask_with_segdups.rds"
        mask_lp_phased_balance       = "${params.mski_base}/allelic_cn/lp_phased_balance/lp_phased_balance_maskA_re.rds"
        ref_hrdetect                     = "hg38"
	}

        'GRCh37' {
            fasta       = "${params.igenomes_base}/Homo_sapiens/Ensembl/GRCh37/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Homo_sapiens/Ensembl/GRCh37/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Homo_sapiens/Ensembl/GRCh37/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Homo_sapiens/Ensembl/GRCh37/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Homo_sapiens/Ensembl/GRCh37/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Homo_sapiens/Ensembl/GRCh37/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Homo_sapiens/Ensembl/GRCh37/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Homo_sapiens/Ensembl/GRCh37/Annotation/README.txt"
            mito_name   = "MT"
            macs_gsize  = "2.7e9"
            blacklist   = "${projectDir}/assets/blacklists/GRCh37-blacklist.bed"
        }
        'GRCh38' {
            fasta       = "${params.igenomes_base}/Homo_sapiens/NCBI/GRCh38/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Homo_sapiens/NCBI/GRCh38/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Homo_sapiens/NCBI/GRCh38/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Homo_sapiens/NCBI/GRCh38/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Homo_sapiens/NCBI/GRCh38/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Homo_sapiens/NCBI/GRCh38/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Homo_sapiens/NCBI/GRCh38/Annotation/Genes/genes.bed"
            mito_name   = "chrM"
            macs_gsize  = "2.7e9"
            blacklist   = "${projectDir}/assets/blacklists/hg38-blacklist.bed"
        }
        'CHM13' {
            fasta       = "${params.igenomes_base}/Homo_sapiens/UCSC/CHM13/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Homo_sapiens/UCSC/CHM13/Sequence/BWAIndex/"
            bwamem2     = "${params.igenomes_base}/Homo_sapiens/UCSC/CHM13/Sequence/BWAmem2Index/"
            gtf         = "${params.igenomes_base}/Homo_sapiens/NCBI/CHM13/Annotation/Genes/genes.gtf"
            gff         = "ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/009/914/755/GCF_009914755.1_T2T-CHM13v2.0/GCF_009914755.1_T2T-CHM13v2.0_genomic.gff.gz"
            mito_name   = "chrM"
        }
        'GRCm38' {
            fasta       = "${params.igenomes_base}/Mus_musculus/Ensembl/GRCm38/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Mus_musculus/Ensembl/GRCm38/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Mus_musculus/Ensembl/GRCm38/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Mus_musculus/Ensembl/GRCm38/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Mus_musculus/Ensembl/GRCm38/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Mus_musculus/Ensembl/GRCm38/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Mus_musculus/Ensembl/GRCm38/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Mus_musculus/Ensembl/GRCm38/Annotation/README.txt"
            mito_name   = "MT"
            macs_gsize  = "1.87e9"
            blacklist   = "${projectDir}/assets/blacklists/GRCm38-blacklist.bed"
        }
        'TAIR10' {
            fasta       = "${params.igenomes_base}/Arabidopsis_thaliana/Ensembl/TAIR10/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Arabidopsis_thaliana/Ensembl/TAIR10/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Arabidopsis_thaliana/Ensembl/TAIR10/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Arabidopsis_thaliana/Ensembl/TAIR10/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Arabidopsis_thaliana/Ensembl/TAIR10/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Arabidopsis_thaliana/Ensembl/TAIR10/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Arabidopsis_thaliana/Ensembl/TAIR10/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Arabidopsis_thaliana/Ensembl/TAIR10/Annotation/README.txt"
            mito_name   = "Mt"
        }
        'EB2' {
            fasta       = "${params.igenomes_base}/Bacillus_subtilis_168/Ensembl/EB2/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Bacillus_subtilis_168/Ensembl/EB2/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Bacillus_subtilis_168/Ensembl/EB2/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Bacillus_subtilis_168/Ensembl/EB2/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Bacillus_subtilis_168/Ensembl/EB2/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Bacillus_subtilis_168/Ensembl/EB2/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Bacillus_subtilis_168/Ensembl/EB2/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Bacillus_subtilis_168/Ensembl/EB2/Annotation/README.txt"
        }
        'UMD3.1' {
            fasta       = "${params.igenomes_base}/Bos_taurus/Ensembl/UMD3.1/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Bos_taurus/Ensembl/UMD3.1/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Bos_taurus/Ensembl/UMD3.1/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Bos_taurus/Ensembl/UMD3.1/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Bos_taurus/Ensembl/UMD3.1/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Bos_taurus/Ensembl/UMD3.1/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Bos_taurus/Ensembl/UMD3.1/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Bos_taurus/Ensembl/UMD3.1/Annotation/README.txt"
            mito_name   = "MT"
        }
        'WBcel235' {
            fasta       = "${params.igenomes_base}/Caenorhabditis_elegans/Ensembl/WBcel235/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Caenorhabditis_elegans/Ensembl/WBcel235/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Caenorhabditis_elegans/Ensembl/WBcel235/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Caenorhabditis_elegans/Ensembl/WBcel235/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Caenorhabditis_elegans/Ensembl/WBcel235/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Caenorhabditis_elegans/Ensembl/WBcel235/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Caenorhabditis_elegans/Ensembl/WBcel235/Annotation/Genes/genes.bed"
            mito_name   = "MtDNA"
            macs_gsize  = "9e7"
        }
        'CanFam3.1' {
            fasta       = "${params.igenomes_base}/Canis_familiaris/Ensembl/CanFam3.1/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Canis_familiaris/Ensembl/CanFam3.1/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Canis_familiaris/Ensembl/CanFam3.1/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Canis_familiaris/Ensembl/CanFam3.1/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Canis_familiaris/Ensembl/CanFam3.1/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Canis_familiaris/Ensembl/CanFam3.1/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Canis_familiaris/Ensembl/CanFam3.1/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Canis_familiaris/Ensembl/CanFam3.1/Annotation/README.txt"
            mito_name   = "MT"
        }
        'GRCz10' {
            fasta       = "${params.igenomes_base}/Danio_rerio/Ensembl/GRCz10/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Danio_rerio/Ensembl/GRCz10/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Danio_rerio/Ensembl/GRCz10/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Danio_rerio/Ensembl/GRCz10/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Danio_rerio/Ensembl/GRCz10/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Danio_rerio/Ensembl/GRCz10/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Danio_rerio/Ensembl/GRCz10/Annotation/Genes/genes.bed"
            mito_name   = "MT"
        }
        'BDGP6' {
            fasta       = "${params.igenomes_base}/Drosophila_melanogaster/Ensembl/BDGP6/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Drosophila_melanogaster/Ensembl/BDGP6/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Drosophila_melanogaster/Ensembl/BDGP6/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Drosophila_melanogaster/Ensembl/BDGP6/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Drosophila_melanogaster/Ensembl/BDGP6/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Drosophila_melanogaster/Ensembl/BDGP6/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Drosophila_melanogaster/Ensembl/BDGP6/Annotation/Genes/genes.bed"
            mito_name   = "M"
            macs_gsize  = "1.2e8"
        }
        'EquCab2' {
            fasta       = "${params.igenomes_base}/Equus_caballus/Ensembl/EquCab2/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Equus_caballus/Ensembl/EquCab2/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Equus_caballus/Ensembl/EquCab2/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Equus_caballus/Ensembl/EquCab2/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Equus_caballus/Ensembl/EquCab2/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Equus_caballus/Ensembl/EquCab2/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Equus_caballus/Ensembl/EquCab2/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Equus_caballus/Ensembl/EquCab2/Annotation/README.txt"
            mito_name   = "MT"
        }
        'EB1' {
            fasta       = "${params.igenomes_base}/Escherichia_coli_K_12_DH10B/Ensembl/EB1/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Escherichia_coli_K_12_DH10B/Ensembl/EB1/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Escherichia_coli_K_12_DH10B/Ensembl/EB1/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Escherichia_coli_K_12_DH10B/Ensembl/EB1/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Escherichia_coli_K_12_DH10B/Ensembl/EB1/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Escherichia_coli_K_12_DH10B/Ensembl/EB1/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Escherichia_coli_K_12_DH10B/Ensembl/EB1/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Escherichia_coli_K_12_DH10B/Ensembl/EB1/Annotation/README.txt"
        }
        'Galgal4' {
            fasta       = "${params.igenomes_base}/Gallus_gallus/Ensembl/Galgal4/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Gallus_gallus/Ensembl/Galgal4/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Gallus_gallus/Ensembl/Galgal4/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Gallus_gallus/Ensembl/Galgal4/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Gallus_gallus/Ensembl/Galgal4/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Gallus_gallus/Ensembl/Galgal4/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Gallus_gallus/Ensembl/Galgal4/Annotation/Genes/genes.bed"
            mito_name   = "MT"
        }
        'Gm01' {
            fasta       = "${params.igenomes_base}/Glycine_max/Ensembl/Gm01/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Glycine_max/Ensembl/Gm01/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Glycine_max/Ensembl/Gm01/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Glycine_max/Ensembl/Gm01/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Glycine_max/Ensembl/Gm01/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Glycine_max/Ensembl/Gm01/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Glycine_max/Ensembl/Gm01/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Glycine_max/Ensembl/Gm01/Annotation/README.txt"
        }
        'Mmul_1' {
            fasta       = "${params.igenomes_base}/Macaca_mulatta/Ensembl/Mmul_1/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Macaca_mulatta/Ensembl/Mmul_1/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Macaca_mulatta/Ensembl/Mmul_1/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Macaca_mulatta/Ensembl/Mmul_1/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Macaca_mulatta/Ensembl/Mmul_1/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Macaca_mulatta/Ensembl/Mmul_1/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Macaca_mulatta/Ensembl/Mmul_1/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Macaca_mulatta/Ensembl/Mmul_1/Annotation/README.txt"
            mito_name   = "MT"
        }
        'IRGSP-1.0' {
            fasta       = "${params.igenomes_base}/Oryza_sativa_japonica/Ensembl/IRGSP-1.0/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Oryza_sativa_japonica/Ensembl/IRGSP-1.0/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Oryza_sativa_japonica/Ensembl/IRGSP-1.0/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Oryza_sativa_japonica/Ensembl/IRGSP-1.0/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Oryza_sativa_japonica/Ensembl/IRGSP-1.0/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Oryza_sativa_japonica/Ensembl/IRGSP-1.0/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Oryza_sativa_japonica/Ensembl/IRGSP-1.0/Annotation/Genes/genes.bed"
            mito_name   = "Mt"
        }
        'CHIMP2.1.4' {
            fasta       = "${params.igenomes_base}/Pan_troglodytes/Ensembl/CHIMP2.1.4/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Pan_troglodytes/Ensembl/CHIMP2.1.4/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Pan_troglodytes/Ensembl/CHIMP2.1.4/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Pan_troglodytes/Ensembl/CHIMP2.1.4/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Pan_troglodytes/Ensembl/CHIMP2.1.4/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Pan_troglodytes/Ensembl/CHIMP2.1.4/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Pan_troglodytes/Ensembl/CHIMP2.1.4/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Pan_troglodytes/Ensembl/CHIMP2.1.4/Annotation/README.txt"
            mito_name   = "MT"
        }
        'Rnor_5.0' {
            fasta       = "${params.igenomes_base}/Rattus_norvegicus/Ensembl/Rnor_5.0/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Rattus_norvegicus/Ensembl/Rnor_5.0/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Rattus_norvegicus/Ensembl/Rnor_5.0/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Rattus_norvegicus/Ensembl/Rnor_5.0/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Rattus_norvegicus/Ensembl/Rnor_5.0/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Rattus_norvegicus/Ensembl/Rnor_5.0/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Rattus_norvegicus/Ensembl/Rnor_5.0/Annotation/Genes/genes.bed"
            mito_name   = "MT"
        }
        'Rnor_6.0' {
            fasta       = "${params.igenomes_base}/Rattus_norvegicus/Ensembl/Rnor_6.0/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Rattus_norvegicus/Ensembl/Rnor_6.0/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Rattus_norvegicus/Ensembl/Rnor_6.0/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Rattus_norvegicus/Ensembl/Rnor_6.0/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Rattus_norvegicus/Ensembl/Rnor_6.0/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Rattus_norvegicus/Ensembl/Rnor_6.0/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Rattus_norvegicus/Ensembl/Rnor_6.0/Annotation/Genes/genes.bed"
            mito_name   = "MT"
        }
        'R64-1-1' {
            fasta       = "${params.igenomes_base}/Saccharomyces_cerevisiae/Ensembl/R64-1-1/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Saccharomyces_cerevisiae/Ensembl/R64-1-1/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Saccharomyces_cerevisiae/Ensembl/R64-1-1/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Saccharomyces_cerevisiae/Ensembl/R64-1-1/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Saccharomyces_cerevisiae/Ensembl/R64-1-1/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Saccharomyces_cerevisiae/Ensembl/R64-1-1/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Saccharomyces_cerevisiae/Ensembl/R64-1-1/Annotation/Genes/genes.bed"
            mito_name   = "MT"
            macs_gsize  = "1.2e7"
        }
        'EF2' {
            fasta       = "${params.igenomes_base}/Schizosaccharomyces_pombe/Ensembl/EF2/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Schizosaccharomyces_pombe/Ensembl/EF2/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Schizosaccharomyces_pombe/Ensembl/EF2/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Schizosaccharomyces_pombe/Ensembl/EF2/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Schizosaccharomyces_pombe/Ensembl/EF2/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Schizosaccharomyces_pombe/Ensembl/EF2/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Schizosaccharomyces_pombe/Ensembl/EF2/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Schizosaccharomyces_pombe/Ensembl/EF2/Annotation/README.txt"
            mito_name   = "MT"
            macs_gsize  = "1.21e7"
        }
        'Sbi1' {
            fasta       = "${params.igenomes_base}/Sorghum_bicolor/Ensembl/Sbi1/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Sorghum_bicolor/Ensembl/Sbi1/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Sorghum_bicolor/Ensembl/Sbi1/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Sorghum_bicolor/Ensembl/Sbi1/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Sorghum_bicolor/Ensembl/Sbi1/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Sorghum_bicolor/Ensembl/Sbi1/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Sorghum_bicolor/Ensembl/Sbi1/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Sorghum_bicolor/Ensembl/Sbi1/Annotation/README.txt"
        }
        'Sscrofa10.2' {
            fasta       = "${params.igenomes_base}/Sus_scrofa/Ensembl/Sscrofa10.2/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Sus_scrofa/Ensembl/Sscrofa10.2/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Sus_scrofa/Ensembl/Sscrofa10.2/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Sus_scrofa/Ensembl/Sscrofa10.2/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Sus_scrofa/Ensembl/Sscrofa10.2/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Sus_scrofa/Ensembl/Sscrofa10.2/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Sus_scrofa/Ensembl/Sscrofa10.2/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Sus_scrofa/Ensembl/Sscrofa10.2/Annotation/README.txt"
            mito_name   = "MT"
        }
        'AGPv3' {
            fasta       = "${params.igenomes_base}/Zea_mays/Ensembl/AGPv3/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Zea_mays/Ensembl/AGPv3/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Zea_mays/Ensembl/AGPv3/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Zea_mays/Ensembl/AGPv3/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Zea_mays/Ensembl/AGPv3/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Zea_mays/Ensembl/AGPv3/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Zea_mays/Ensembl/AGPv3/Annotation/Genes/genes.bed"
            mito_name   = "Mt"
        }
        'hg38' {
            fasta       = "${params.igenomes_base}/Homo_sapiens/UCSC/hg38/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Homo_sapiens/UCSC/hg38/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Homo_sapiens/UCSC/hg38/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Homo_sapiens/UCSC/hg38/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Homo_sapiens/UCSC/hg38/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Homo_sapiens/UCSC/hg38/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Homo_sapiens/UCSC/hg38/Annotation/Genes/genes.bed"
            mito_name   = "chrM"
            macs_gsize  = "2.7e9"
            blacklist   = "${projectDir}/assets/blacklists/hg38-blacklist.bed"
        }
        'hg19' {
            fasta       = "${params.igenomes_base}/Homo_sapiens/UCSC/hg19/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Homo_sapiens/UCSC/hg19/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Homo_sapiens/UCSC/hg19/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Homo_sapiens/UCSC/hg19/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Homo_sapiens/UCSC/hg19/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Homo_sapiens/UCSC/hg19/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Homo_sapiens/UCSC/hg19/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Homo_sapiens/UCSC/hg19/Annotation/README.txt"
            mito_name   = "chrM"
            macs_gsize  = "2.7e9"
            blacklist   = "${projectDir}/assets/blacklists/hg19-blacklist.bed"
        }
        'mm10' {
            fasta       = "${params.igenomes_base}/Mus_musculus/UCSC/mm10/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Mus_musculus/UCSC/mm10/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Mus_musculus/UCSC/mm10/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Mus_musculus/UCSC/mm10/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Mus_musculus/UCSC/mm10/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Mus_musculus/UCSC/mm10/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Mus_musculus/UCSC/mm10/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Mus_musculus/UCSC/mm10/Annotation/README.txt"
            mito_name   = "chrM"
            macs_gsize  = "1.87e9"
            blacklist   = "${projectDir}/assets/blacklists/mm10-blacklist.bed"
        }
        'bosTau8' {
            fasta       = "${params.igenomes_base}/Bos_taurus/UCSC/bosTau8/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Bos_taurus/UCSC/bosTau8/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Bos_taurus/UCSC/bosTau8/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Bos_taurus/UCSC/bosTau8/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Bos_taurus/UCSC/bosTau8/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Bos_taurus/UCSC/bosTau8/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Bos_taurus/UCSC/bosTau8/Annotation/Genes/genes.bed"
            mito_name   = "chrM"
        }
        'ce10' {
            fasta       = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Annotation/README.txt"
            mito_name   = "chrM"
            macs_gsize  = "9e7"
        }
        'canFam3' {
            fasta       = "${params.igenomes_base}/Canis_familiaris/UCSC/canFam3/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Canis_familiaris/UCSC/canFam3/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Canis_familiaris/UCSC/canFam3/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Canis_familiaris/UCSC/canFam3/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Canis_familiaris/UCSC/canFam3/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Canis_familiaris/UCSC/canFam3/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Canis_familiaris/UCSC/canFam3/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Canis_familiaris/UCSC/canFam3/Annotation/README.txt"
            mito_name   = "chrM"
        }
        'danRer10' {
            fasta       = "${params.igenomes_base}/Danio_rerio/UCSC/danRer10/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Danio_rerio/UCSC/danRer10/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Danio_rerio/UCSC/danRer10/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Danio_rerio/UCSC/danRer10/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Danio_rerio/UCSC/danRer10/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Danio_rerio/UCSC/danRer10/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Danio_rerio/UCSC/danRer10/Annotation/Genes/genes.bed"
            mito_name   = "chrM"
            macs_gsize  = "1.37e9"
        }
        'dm6' {
            fasta       = "${params.igenomes_base}/Drosophila_melanogaster/UCSC/dm6/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Drosophila_melanogaster/UCSC/dm6/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Drosophila_melanogaster/UCSC/dm6/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Drosophila_melanogaster/UCSC/dm6/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Drosophila_melanogaster/UCSC/dm6/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Drosophila_melanogaster/UCSC/dm6/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Drosophila_melanogaster/UCSC/dm6/Annotation/Genes/genes.bed"
            mito_name   = "chrM"
            macs_gsize  = "1.2e8"
        }
        'equCab2' {
            fasta       = "${params.igenomes_base}/Equus_caballus/UCSC/equCab2/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Equus_caballus/UCSC/equCab2/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Equus_caballus/UCSC/equCab2/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Equus_caballus/UCSC/equCab2/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Equus_caballus/UCSC/equCab2/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Equus_caballus/UCSC/equCab2/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Equus_caballus/UCSC/equCab2/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Equus_caballus/UCSC/equCab2/Annotation/README.txt"
            mito_name   = "chrM"
        }
        'galGal4' {
            fasta       = "${params.igenomes_base}/Gallus_gallus/UCSC/galGal4/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Gallus_gallus/UCSC/galGal4/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Gallus_gallus/UCSC/galGal4/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Gallus_gallus/UCSC/galGal4/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Gallus_gallus/UCSC/galGal4/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Gallus_gallus/UCSC/galGal4/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Gallus_gallus/UCSC/galGal4/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Gallus_gallus/UCSC/galGal4/Annotation/README.txt"
            mito_name   = "chrM"
        }
        'panTro4' {
            fasta       = "${params.igenomes_base}/Pan_troglodytes/UCSC/panTro4/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Pan_troglodytes/UCSC/panTro4/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Pan_troglodytes/UCSC/panTro4/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Pan_troglodytes/UCSC/panTro4/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Pan_troglodytes/UCSC/panTro4/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Pan_troglodytes/UCSC/panTro4/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Pan_troglodytes/UCSC/panTro4/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Pan_troglodytes/UCSC/panTro4/Annotation/README.txt"
            mito_name   = "chrM"
        }
        'rn6' {
            fasta       = "${params.igenomes_base}/Rattus_norvegicus/UCSC/rn6/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Rattus_norvegicus/UCSC/rn6/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Rattus_norvegicus/UCSC/rn6/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Rattus_norvegicus/UCSC/rn6/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Rattus_norvegicus/UCSC/rn6/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Rattus_norvegicus/UCSC/rn6/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Rattus_norvegicus/UCSC/rn6/Annotation/Genes/genes.bed"
            mito_name   = "chrM"
        }
        'sacCer3' {
            fasta       = "${params.igenomes_base}/Saccharomyces_cerevisiae/UCSC/sacCer3/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Saccharomyces_cerevisiae/UCSC/sacCer3/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Saccharomyces_cerevisiae/UCSC/sacCer3/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Saccharomyces_cerevisiae/UCSC/sacCer3/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Saccharomyces_cerevisiae/UCSC/sacCer3/Sequence/BismarkIndex/"
            readme      = "${params.igenomes_base}/Saccharomyces_cerevisiae/UCSC/sacCer3/Annotation/README.txt"
            mito_name   = "chrM"
            macs_gsize  = "1.2e7"
        }
        'susScr3' {
            fasta       = "${params.igenomes_base}/Sus_scrofa/UCSC/susScr3/Sequence/WholeGenomeFasta/genome.fa"
            bwa         = "${params.igenomes_base}/Sus_scrofa/UCSC/susScr3/Sequence/BWAIndex/version0.6.0/"
            bowtie2     = "${params.igenomes_base}/Sus_scrofa/UCSC/susScr3/Sequence/Bowtie2Index/"
            star        = "${params.igenomes_base}/Sus_scrofa/UCSC/susScr3/Sequence/STARIndex/"
            bismark     = "${params.igenomes_base}/Sus_scrofa/UCSC/susScr3/Sequence/BismarkIndex/"
            gtf         = "${params.igenomes_base}/Sus_scrofa/UCSC/susScr3/Annotation/Genes/genes.gtf"
            bed12       = "${params.igenomes_base}/Sus_scrofa/UCSC/susScr3/Annotation/Genes/genes.bed"
            readme      = "${params.igenomes_base}/Sus_scrofa/UCSC/susScr3/Annotation/README.txt"
            mito_name   = "chrM"
        }
    }
}

profiles {

   docker {
	    docker.runOptions       = '--platform linux/amd64'
        docker.enabled          = false
        docker.userEmulation    = true
        docker.registry         = 'docker.io'
    }
	singularity {
		singularity.enabled    = true
		singularity.autoMounts = true
        singularity.runOptions = '--env CPLEX_DIR=/opt/cplex'
		conda.enabled          = false
		docker.enabled         = false
		podman.enabled         = false
		shifter.enabled        = false
		charliecloud.enabled   = false
		apptainer.enabled      = false
	}
}

// Nextflow plugins
plugins {
	id 'nf-validation' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
	PYTHONNOUSERSITE = 1
	R_PROFILE_USER   = "/.Rprofile"
	R_ENVIRON_USER   = "/.Renviron"
	JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
	enabled = true
	file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
	enabled = true
	file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
	enabled = true
	file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
	enabled = true
	file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
	name            = 'mskilab-org/nf-jabba'
	author          = """Tanubrata Dey and Shihab Dider"""
	homePage        = 'https://github.com/mskilab-org/nf-jabba'
	description     = """Clinical Core Pipeline for MSkiLab"""
	mainScript      = 'main.nf'
	nextflowVersion = '!>=23.04.0'
	version         = '1.0dev'
	doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig '../conf/modules.config'


// prepare reference, pre-alignment steps
includeConfig '../conf/modules/prepare_cache.config'
includeConfig '../conf/modules/prepare_genome.config'
includeConfig '../conf/modules/prepare_intervals.config'

// Alignment configurations
includeConfig '../conf/modules/aligner.config'
includeConfig '../conf/modules/alignment_to_fastq.config'
includeConfig '../conf/modules/markduplicates.config'
includeConfig '../conf/modules/prepare_recalibration.config'
includeConfig '../conf/modules/recalibrate.config'
includeConfig '../conf/modules/trimming.config'

// SV configurations
includeConfig '../conf/modules/structural_variants.config'

// fragCounter configurations
includeConfig '../conf/modules/fragcounter.config'

// SNV calling configurations (sage and strelka)
includeConfig '../conf/modules/snv_calling.config'

// Variant annotation configurations (snpeff and pave)
includeConfig '../conf/modules/variant_annotation.config'

// Signatures configurations (snpeff and pave)
includeConfig '../conf/modules/sigprofilerassignment.config'

// Dryclean configurations
includeConfig '../conf/modules/dryclean.config'

// ASCAT configurations
includeConfig '../conf/modules/ascat.config'

// CBS configurations
includeConfig '../conf/modules/cbs.config'

// hetpileups configurations
includeConfig '../conf/modules/hetpileups.config'

// JaBbA configurations
includeConfig '../conf/modules/jabba.config'

// Events configurations
includeConfig '../conf/modules/events.config'

// Fusions configurations
includeConfig '../conf/modules/fusions.config'

// Allelic CN configurations
includeConfig '../conf/modules/allelic_cn.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
