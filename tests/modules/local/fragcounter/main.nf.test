nextflow_process {

    name "Test Process FRAGCOUNTER"
    script "modules/local/fragcounter/main.nf"
    process "FRAGCOUNTER"

    test("Should run Fragcounter on Tumor without failures") {

        when {
            params {
                // define parameters here. Example:
                outdir = "results"
            }
            process {
                """
                // define inputs of the process here. Example:
                // input[0] = file("test-file.txt")
                meta = [ id: "test" ]
                input[0] = tuple(meta, "$projectDir/tests/test_data/chr21.bam", "$projectDir/tests/test_data/chr21.bai")
                // Defaults from nextflow.config
                input[1] = params.midpoint_frag
                input[2] = params.windowsize_frag
                input[3] = params.genomes['GATK.GRCh37'].gcmapdir_frag
                input[4] = params.minmapq_frag
                input[5] = params.genomes['GATK.GRCh37'].fasta
                input[6] = params.genomes['GATK.GRCh37'].fasta_fai
                input[7] = params.paired_frag
                input[8] = params.exome_frag
                """
            }
        }

        then {
            assert process.success
            //assert snapshot(process.out).match()
        }

    }

    test("Should run without Fragcounter on Normal without failures") {

        when {
            params {
                // define parameters here. Example:
                outdir = "results"
            }
            process {
                """
                // define inputs of the process here. Example:
                // input[0] = file("test-file.txt")
                meta = [ id: "test" ]
                input[0] = tuple(meta,  "$projectDir/tests/test_data/chr21.bam",  "$projectDir/tests/test_data/chr21.bai")
                // Defaults from nextflow.config
                input[1] = params.midpoint_frag
                input[2] = params.windowsize_frag
                input[3] = params.genomes['GATK.GRCh37'].gcmapdir_frag
                input[4] = params.minmapq_frag
                input[5] = params.genomes['GATK.GRCh37'].fasta
                input[6] = params.genomes['GATK.GRCh37'].fasta_fai
                input[7] = params.paired_frag
                input[8] = params.exome_frag
                """
            }
        }

        then {
            assert process.success
            //assert snapshot(process.out).match()
        }

    }

}
